(* Copyright (C) 2006 Stephen Weeks.
 *
 * This code is released under the MLton license, a BSD-style license.
 * See the LICENSE file or http://mlton.org/License for details.
 *)
(* Every functor in this file is given a unique name so that the "forceUsed"
 * annotation can mark it as used.
 *)
functor F_ARRAY_GENERIC_ARRAY (S: ARRAY): GENERIC_ARRAY = S
functor F_ARRAY_SLICE_SLICE (S: ARRAY_SLICE): SLICE = S
functor F_CHAR_ORDERED (S: CHAR): ORDERED = S
functor F_GENERIC_ARRAY_SEQUENCE (S: GENERIC_ARRAY): SEQUENCE = S
functor F_GENERIC_SLICE_SLICEABLE (S: GENERIC_SLICE): SLICEABLE = S
functor F_GENERIC_VECTOR_SEQUENCE (S: GENERIC_VECTOR): SEQUENCE = S
functor F_INT_ORDERED (S: INT): ORDERED = S
functor F_MONO_ARRAY_GENERIC_ARRAY (S: MONO_ARRAY): GENERIC_ARRAY = S
functor F_MONO_SLICE_GENERIC_SLICE (S: MONO_SLICE): GENERIC_SLICE = S
functor F_MONO_VECTOR_GENERIC_VECTOR (S: MONO_VECTOR): GENERIC_VECTOR = S
functor F_SEQ_SEQUENCE (S: SEQ): SEQUENCE = S
functor F_SEQUENCE_SLICEABLE (S: SEQUENCE): SLICEABLE = S
functor F_SLICE_GENERIC_SLICE (S: SLICE): GENERIC_SLICE = S
functor F_SLICEABLE_ENUMERABLE (S: SLICEABLE): ENUMERABLE = S
functor F_STRING_MONO_VECTOR (S: STRING): MONO_VECTOR = S
functor F_TIME_ORDERED (S: TIME): ORDERED = S
functor F_VECTOR_GENERIC_VECTOR (S: VECTOR): GENERIC_VECTOR = S
functor F_VECTOR_SLICE_SLICE (S: VECTOR_SLICE): SLICE = S
functor F_WORD_ORDERED (S: WORD): ORDERED = S

